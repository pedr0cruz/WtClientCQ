20180322 - Respuesta a correo

Punto 1 -   Cierto, Wt::Core::Observable es para manejar el ciclo de vida de los objetos.
			Por tanto volveré a incluir ObserverGoF y SubjectGoF.

Punto 2 -   En la primera charla donde me diste una explicación detallada me dijiste
			que sería deseable que la vista de los resultados pudiera ser una tabla,
			un gráfico o un reporte. Por eso lo hice polimórfico.

Punto 3 -   Incorporaré la cadena de responsabilidad. No la había olvidado, es que
			no sabía cómo incorporarla en el esquema de forma sencilla y clara.

Punto 4 -   Te mando dos variantes. En una uso una clase proxy entre ResultSetsController
			y las clases ResultSetsView y ResultSetsModel. Estas dos últimas a su vez
			contienen un vector de objetos de clase ResultSet2View y ResultSet2Model,
			respectivamente. Fíjate en que esta clase (ResultSetsController) se refiere
			a los ResultSets en plural, porque tiene referencias a todos los ResultSet
			asociados a las diferentes consultas que pueda haber hecho el usuario sobre
			el árbol (WorkspaceView) en el panel de la izquierda).

Punto 5 -   En la otra variante la clase ResultSetsController contiene ella misma las
			referencias a las vistas y los modelos correspondientes, en sendos vectores
			de los tipos respectivos.

Nota 1 -    